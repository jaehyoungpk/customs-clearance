spring:
  config:
    import: optional:file:.env[.properties]

  application:
    name: customs-clearance-backend
  
  profiles:
    active: dev

  servlet:
    multipart:
      max-file-size: 1GB
      max-request-size: 1GB
    encoding:
      enabled: true
      force: true
      charset: UTF-8
  
  datasource:
    url: jdbc:mysql://${MYSQLHOST}:${MYSQLPORT}/${MYSQLDATABASE}?useSSL=false&serverTimezone=UTC&allowPublicKeyRetrieval=true
    username: ${MYSQLUSER}
    password: ${MYSQLPASSWORD}
    driver-class-name: com.mysql.cj.jdbc.Driver
    
  jpa:
    hibernate:
      ddl-auto: update
    show-sql: false
    properties:
      hibernate:
        dialect: org.hibernate.dialect.MySQLDialect
        format_sql: true
        use_sql_comments: true
    defer-datasource-initialization: true
    
  sql:
    init:
      mode: never
      
  flyway:
    enabled: true
    locations: classpath:db/migration
    baseline-on-migrate: true
    
  jackson:
    default-property-inclusion: NON_NULL
    serialization:
      write-dates-as-timestamps: false

server:
  port: 8080
  servlet:
    context-path: /api/v1
    
management:
  endpoints:
    web:
      exposure:
        include: health,info,metrics,prometheus
  endpoint:
    health:
      show-details: always  # 헬스체크를 인증 없이 가능하게 변경

logging:
  level:
    com.customs.clearance: INFO
    org.springframework.security: DEBUG
    org.hibernate.SQL: DEBUG
    org.hibernate.type.descriptor.sql.BasicBinder: TRACE
  pattern:
    console: "%d{yyyy-MM-dd HH:mm:ss} - %msg%n"
    file: "%d{yyyy-MM-dd HH:mm:ss} [%thread] %-5level %logger{36} - %msg%n"
  file:
    name: logs/customs-clearance-backend.log
    
springdoc:
  api-docs:
    enabled: true
    path: /api-docs
  swagger-ui:
    enabled: true
    path: /swagger-ui/

# Custom application properties
customs:
  clearance:
    api:
      version: v1
      timeout: 30000
    security:
      jwt:
        secret: ${JWT_SECRET:mySecretKey}
        token-prefix: Bearer
        expiration: 86400000 # 24 hours in milliseconds
    integration:
      external-api:
        base-url: ${EXTERNAL_API_URL:http://localhost:9000}
        timeout: 10000
    file:
      upload-dir: uploads

# --- Profiles (optional) ---
# dev, prod, test 설정은 필요시 주석 해제 후 사용 가능
